{
  "name": "wintersmith-kelvin",
  "version": "0.0.6",
  "author": {
    "name": "Christopher Cliff",
    "email": "ctcliff@gmail.com"
  },
  "description": "A production-ready asset management plugin for Wintersmith.",
  "license": "MIT",
  "dependencies": {
    "less": ">= 0.0.1",
    "async": "~0.1.22",
    "coffee-script": "1.2.x",
    "nap": "0.6.2",
    "underscore": "~1.4.2",
    "moment": "~1.7.2",
    "html-minifier": "0.4.5",
    "glob": "~3.1.14",
    "uglify-js": "1",
    "sqwish": "~0.2.0",
    "mkdirp": "~0.3.4",
    "hogan.js": "~2.0.0"
  },
  "devDependencies": {
    "mocha": "~1.7.4",
    "should": "~1.2.1"
  },
  "scripts": {
    "test": "./node_modules/mocha/bin/mocha --compilers coffee:coffee-script"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/christophercliff/wintersmith-kelvin"
  },
  "readme": "# wintersmith-kelvin\n\nA production-ready asset management plugin for [Wintersmith](https://github.com/jnordberg/wintersmith).\n\n[![Build Status](https://secure.travis-ci.org/christophercliff/wintersmith-kelvin.png?branch=master)](https://travis-ci.org/christophercliff/wintersmith-kelvin)\n\n## Features\n\n- Concatenate and minify client-side JavaScript, CSS (LESS) and compiled JavaScript templates (Hogan.js).\n- Separate modes for development and production.\n- Embed fonts and images in your CSS.\n- Versioned file names.\n- Compatible with CDN.\n\n## Installation\n\nInstall the package locally using npm:\n\n`npm install wintersmith-kelvin`\n\nThen add the plugin to your `config.json`:\n\n```json\n{\n  \"plugins\": [\n    \"./node_modules/wintersmith-kelvin/\"\n  ]\n}\n````\n\n## Usage\n\n### Configuration\n\nUse the `locals` object in the [Wintersmith config](https://github.com/jnordberg/wintersmith#config) to configure Kelvin.\n\n<table>\n    <tr>\n        <th>Name</th>\n        <th>Default</th>\n        <th>Description</th>\n    </tr>\n    <tr>\n        <td>assets</td>\n        <td>{}</td>\n        <td>The assets object containing your package declarations.</td>\n    </tr>\n    <tr>\n        <td>mode</td>\n        <td>development</td>\n        <td>E.g. \"development\" or \"production\".</td>\n    </tr>\n    <tr>\n        <td>cdn</td>\n        <td>undefined</td>\n        <td>If defined, will prepend a CDN host to asset references in production mode. E.g. \"foo.cloudfront.net\". Kelvin will generate protocol-relative URLs.</td>\n      </tr>\n</table>\n\n### Rendering\n\nKelvin will convert your package declarations into `<script>` and `<link>` tags to be rendered in template files. Using Mustache syntax:\n\n```mustache\n    {{& assets.css.all }}\n    {{& assets.js.all }}\n    {{& assets.jst.all }}\n```\n\n## Modes\n\n### Development\n\nDevelopment mode is meant to be run locally on the preview server. Files are transformed into CSS or JavaScript, but loaded separately and cache busted. An example [development config](https://github.com/christophercliff/wintersmith-kelvin/blob/master/example/config.json) might render the following:\n\n```html\n<link href=\"/assets/css/a.less-1e2e639b152465ce8f19922f7e1eb00c.css\" rel=\"stylesheet\" />\n<link href=\"/assets/css/b.less-87b645564b890cdf0c9243d7fc00e8fd.css\" rel=\"stylesheet\" />\n<script src=\"/assets/js/a.js-b445739a15cb081a291454401bb98627.js\"></script>\n<script src=\"/assets/js/b.js-c6e6cf9f70dd97eea7164bf89cd5c015.js\"></script>\n<script>var Hogan=Hogan||{},JST=JST||{};(function(e,t){function a(e){return String(e===null||e===undefined?\"\":e)}function f(e){return e=a(e),u.test(e)?e.replace(n,\"&amp;\").replace(r,\"&lt;\").replace(i,\"&gt;\").replace(s,\"&#39;\").replace(o,\"&quot;\"):e}e.Template=function(e,n,r,i){this.r=e||this.r,this.c=r,this.options=i,this.text=n||\"\",this.buf=t?[]:\"\"},e.Template.prototype={r:function(e,t,n){return\"\"},v:f,t:a,render:function(t,n,r){return this.ri([t],n||{},r)},ri:function(e,t,n){return this.r(e,t,n)},rp:function(e,t,n,r){var i=n[e];return i?(this.c&&typeof i==\"string\"&&(i=this.c.compile(i,this.options)),i.ri(t,n,r)):\"\"},rs:function(e,t,n){var r=e[e.length-1];if(!l(r)){n(e,t,this);return}for(var i=0;i<r.length;i++)e.push(r[i]),n(e,t,this),e.pop()},s:function(e,t,n,r,i,s,o){var u;return l(e)&&e.length===0?!1:(typeof e==\"function\"&&(e=this.ls(e,t,n,r,i,s,o)),u=e===\"\"||!!e,!r&&u&&t&&t.push(typeof e==\"object\"?e:t[t.length-1]),u)},d:function(e,t,n,r){var i=e.split(\".\"),s=this.f(i[0],t,n,r),o=null;if(e===\".\"&&l(t[t.length-2]))return t[t.length-1];for(var u=1;u<i.length;u++)s&&typeof s==\"object\"&&i[u]in s?(o=s,s=s[i[u]]):s=\"\";return r&&!s?!1:(!r&&typeof s==\"function\"&&(t.push(o),s=this.lv(s,t,n),t.pop()),s)},f:function(e,t,n,r){var i=!1,s=null,o=!1;for(var u=t.length-1;u>=0;u--){s=t[u];if(s&&typeof s==\"object\"&&e in s){i=s[e],o=!0;break}}return o?(!r&&typeof i==\"function\"&&(i=this.lv(i,t,n)),i):r?!1:\"\"},ho:function(e,t,n,r,i){var s=this.c,o=this.options;o.delimiters=i;var r=e.call(t,r);return r=r==null?String(r):r.toString(),this.b(s.compile(r,o).render(t,n)),!1},b:t?function(e){this.buf.push(e)}:function(e){this.buf+=e},fl:t?function(){var e=this.buf.join(\"\");return this.buf=[],e}:function(){var e=this.buf;return this.buf=\"\",e},ls:function(e,t,n,r,i,s,o){var u=t[t.length-1],a=null;if(!r&&this.c&&e.length>0)return this.ho(e,u,n,this.text.substring(i,s),o);a=e.call(u);if(typeof a==\"function\"){if(r)return!0;if(this.c)return this.ho(a,u,n,this.text.substring(i,s),o)}return a},lv:function(e,t,n){var r=t[t.length-1],i=e.call(r);if(typeof i==\"function\"){i=a(i.call(r));if(this.c&&~i.indexOf(\"{{\"))return this.c.compile(i,this.options).render(r,n)}return a(i)}};var n=/&/g,r=/</g,i=/>/g,s=/\\'/g,o=/\\\"/g,u=/[&<>\\\"\\']/,l=Array.isArray||function(e){return Object.prototype.toString.call(e)===\"[object Array]\"}})(typeof exports!=\"undefined\"?exports:Hogan)</script>\n<script src=\"/assets/jst/a.mustache-3c88bce4627932bf7aa1387d59eb5cd4.js\"></script>\n<script src=\"/assets/jst/b.mustache-163b93966aa63e7713eabc8e88deb711.js\"></script>\n```\n\n### Production\n\nProduction mode is meant to be run programatically. Files are transformed, combined and minified. An example [production config](https://github.com/christophercliff/wintersmith-kelvin/blob/master/example/config_prod.json) might render the following:\n\n```html\n<link href=\"//abc.cloudfront.net/assets/css/all-411db7247c935a328a264bee62881196.css\" rel=\"stylesheet\">\n<script src=\"//abc.cloudfront.net/assets/js/all-e08d2578b50d4bd9d3ab3b4c892f1f7b.js\"></script>\n<script src=\"//abc.cloudfront.net/assets/jst/all-b098f354b09fe46fe4f125b5b66ba481.js\"></script>\n```\n\n## Acknowledgements\n\nKelvin was inspired by and incorporates code from the following projects:\n\n- [nap](https://github.com/craigspaeth/nap)\n- [wintersmith-hogan](https://github.com/sfrdmn/wintersmith-hogan)\n- [wintersmith-less](https://github.com/jnordberg/wintersmith-less)",
  "_id": "wintersmith-kelvin@0.0.6",
  "dist": {
    "shasum": "5f3d246ee52a2828332855e19a8b288d45b33792"
  },
  "_from": "wintersmith-kelvin@0.0.6"
}
